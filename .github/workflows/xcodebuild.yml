name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Set Default Scheme
      #   run: |
      #     scheme_list=$(xcodebuild -list -json | tr -d "\n")
      #     default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
      #     echo $default | cat >default
      #     echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'datavyu' }}
          target: ${{ 'datavyu' }}
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          # BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH


          rm -rf "/Users/runner/Library/Developer/Xcode/DerivedData/*"
          # xcodebuild build analyze -target "$target" -workspace  
          xcodebuild ONLY_ACTIVE_ARCH=NO -scheme "datavyu" -configuration Release build | xcpretty && exit ${PIPESTATUS[0]}
      # - name: create-dmg-action
      #   # You may pin to the exact commit or the version.
      #   # uses: QQxiaoming/create-dmg-action@9da339e5d8baa50036b55ed2c6545fb51cee72c4
      #   uses: QQxiaoming/create-dmg-action@v0.0.2
      #   with:
      #     # source dir
      #     srcdir: build/Release
      #     # dmg name
      #     name: "Datavyu2"
